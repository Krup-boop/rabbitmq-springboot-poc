server:
  port: 8081

spring:
  application:
    name: consumer

  rabbitmq:
    host: localhost
    port: 5672
    username: admin
    password: admin123
    virtual-host: /
    listener:
      simple:
        concurrency: 5
        max-concurrency: 10
        prefetch: 250
        retry:
          enabled: true
          initial-interval: 1000
          max-attempts: 3
          max-interval: 10000
          multiplier: 2

  datasource:
    url: jdbc:postgresql://localhost:5433/tenant_data
    username: admin
    password: admin123
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: update  # Change from 'update' to 'validate' since we created tables manually
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

logging:
  level:
    com.poc.consumer: DEBUG
    org.springframework.amqp: INFO
    org.hibernate.SQL: WARN

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always